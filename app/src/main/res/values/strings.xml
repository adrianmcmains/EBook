<resources>
    <string name="app_name">EBook</string>
    <string name="email"></string>
    <string name="password"></string>
    <string name="topics">TOPICS</string>
    <string name="mongodb">Mongodb</string>
    <string name="expressjs">Expressjs</string>
    <string name="angularjs">Angularjs</string>
    <string name="nodejs">Nodejs</string>
    <string name="Introduction">Database Database is a physical container for collections. Each database gets its own set of files on the file system. A single MongoDB server typically has multiple databases. Collection Collection is a group of MongoDB documents. It is the equivalent of an RDBMS table. A collection exists within a single database. Collections do not enforce a schema. Documents within a collection can have different fields. Typically, all documents in a collection are of similar or related purpose. Document A document is a set of key-value pairs. Documents have dynamic schema. Dynamic schema means that documents in the same collection do not need to have the same set of fields or structure, and common fields in a collection\'s documents may hold different types of data.</string>
    <string name="Example">Sample Document
        { _id: ObjectId(7df78ad8902c)
        title: \'MongoDB Overview\',
        description: \'MongoDB is no sql database\',
        by: \'tutorials point\',
        url: \'http://www.tutorialspoint.com\',
        tags: [\'mongodb\', \'database\', \'NoSQL\'],
        likes: 100,
        comments: [
        {
        user:\'user1\', message: \'My first comment\', dateCreated: new Date(2011,1,20,2,15), like: 0
        },
        { user:\'user2\', message: \'My second comments\', dateCreated: new Date(2011,1,25,7,45),
        like: 5
        }
        ]
        }</string>
    <string name="ExpressJs">What is express?
Express provides a minimal interface to us to build our applications.
        It is minimal, providing us the absolutely required tools to build our app and flexible, there are numerous modules available on npm for express, which can be directly plugged into express.

Express was developed by TJ Holowaychuk and is maintained by Node.js foundation and numerous open source contributors.

Why express?
Unlike its competitors like Rails and Django, which have an opinionated way of building applications, express has no "best way" do something. It is very flexible and pluggable.</string>
    <string name="nodejs_work">NodeJS was developed for the purpose of helping programmers in the development of
network applications which are scalable. It is an event-driven and asynchronous
framework which was built on top of the JavaScript engine for Chrome. For you to master
how to use it well, you should be good in JavaScript. It is good for the development of
web applications. Due to its non-blocking mode of operation, the programs are not forced
to wait for the others to be executed, but a callback is just made. As you wait for a
response in Node, you are allowed to continue with performing other tasks. All of the
Node libraries have been designed so that they can operate in a non-blocking mode.
    The data for a node application is not buffered at all in the memory. Instead, this data is
output by means of chunk-by-chunk. Due to its features, it has demonstrated a great
difference between it and other related frameworks and hence its increasing popularity.</string>
    <string name="angular_text">What is AngularJS?
AngularJS is an open source web application framework. It was originally developed in 2009 by Misko Hevery and Adam Abrons. It is now maintained by Google. Its latest version is 1.4.3.

Definition of AngularJS as put by its official documentation is as follows −

AngularJS is a structural framework for dynamic web apps. It lets you use HTML as your template language and lets you extend HTML syntax to express your application components clearly and succinctly. Angular data binding and dependency injection eliminate much of the code you currently have to write. And it all happens within the browser, making it an ideal partner with any server technology.
Features
AngularJS is a powerful JavaScript based development framework to create RICH Internet Application(RIA).

AngularJS provides developers options to write client side application (using JavaScript) in a clean MVC(Model View Controller) way.

Application written in AngularJS is cross-browser compliant. AngularJS automatically handles JavaScript code suitable for each browser.

AngularJS is open source, completely free, and used by thousands of developers around the world. It is licensed under the Apache License version 2.0.

Overall, AngularJS is a framework to build large scale and high performance web application while keeping them as easy-to-maintain.

Core Features
Following are most important core features of AngularJS −

Data-binding − It is the automatic synchronization of data between model and view components.

Scope − These are objects that refer to the model. They act as a glue between controller and view.

Controller − These are JavaScript functions that are bound to a particular scope.

Services − AngularJS come with several built-in services for example $https: to make a XMLHttpRequests. These are singleton objects which are instantiated only once in app.

Filters − These select a subset of items from an array and returns a new array.

Directives − Directives are markers on DOM elements (such as elements, attributes, css, and more). These can be used to create custom HTML tags that serve as new, custom widgets. AngularJS has built-in directives (ngBind, ngModel…)

Templates − These are the rendered view with information from the controller and model. These can be a single file (like index.html) or multiple views in one page using "partials".

Routing − It is concept of switching views.

Model View Whatever − MVC is a design pattern for dividing an application into different parts (called Model, View and Controller), each with distinct responsibilities. AngularJS does not implement MVC in the traditional sense, but rather something closer to MVVM (Model-View-ViewModel). The Angular JS team refers it humorously as Model View Whatever.

Deep Linking − Deep linking allows you to encode the state of application in the URL so that it can be bookmarked. The application can then be restored from the URL to the same state.

Dependency Injection − AngularJS has a built-in dependency injection subsystem that helps the developer by making the application easier to develop, understand, and test.</string>
    <string name="bienvenue">Bienvenue</string>
</resources>
